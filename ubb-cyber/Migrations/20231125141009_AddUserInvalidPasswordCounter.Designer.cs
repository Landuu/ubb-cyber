// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ubb_cyber.Database;

#nullable disable

namespace ubb_cyber.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231125141009_AddUserInvalidPasswordCounter")]
    partial class AddUserInvalidPasswordCounter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ubb_cyber.Models.PasswordPolicy", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MinPasswordLength")
                        .HasColumnType("int");

                    b.Property<int>("NumbersCount")
                        .HasColumnType("int");

                    b.Property<int>("PasswordExpireDays")
                        .HasColumnType("int");

                    b.Property<int>("UppercaseCount")
                        .HasColumnType("int");

                    b.HasKey("Key");

                    b.ToTable("PasswordPolicies");
                });

            modelBuilder.Entity("ubb_cyber.Models.UsedPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsedPasswords");
                });

            modelBuilder.Entity("ubb_cyber.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InvalidPasswordCounter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("OverrideMinPasswordLength")
                        .HasColumnType("int");

                    b.Property<int?>("OverrideNumbersCount")
                        .HasColumnType("int");

                    b.Property<int?>("OverridePasswordExpireDays")
                        .HasColumnType("int");

                    b.Property<int?>("OverrideUppercaseCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PasswordExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ResetPasswordKey")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ubb_cyber.Models.UsedPassword", b =>
                {
                    b.HasOne("ubb_cyber.Models.User", "User")
                        .WithMany("UsedPasswords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ubb_cyber.Models.User", b =>
                {
                    b.Navigation("UsedPasswords");
                });
#pragma warning restore 612, 618
        }
    }
}
